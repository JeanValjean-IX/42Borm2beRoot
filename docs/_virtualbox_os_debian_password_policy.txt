- Para poder establecer los valores temporales editamos el fichero "login.defs":

- Abrimos el fichero de configuración:

$ sudo nano /etc/login.defs

Buscamos las lineas y modificamos los valores por los que tocan:

PASS_MAX_DAYS 30
PASS_MIN_DAYS 2
PASS_WARN_AGE 7

- Modificamos manualmente los valores del usuario actual

$ sudo chage username42 -M 30 -m 2 -W 7

- Miramos las propiedades del password del usuario que estamos utilizando (username42):

$ change -l username42

Last password change					: Jan 20, 2023
Password expires					: Feb 19, 2023
Password inactive					: never
Account expires						: never
Minimum number of days between password change		: 2
Maximum number of days between password change		: 30
Number of days of warning before password expires	: 7

- Hay que tener en cuenta la propiedades mostradas, por ejemplo, si nos fijamos en el "Minimum number of days between password change" (el minimo de días que han de pasar para poder cambiar el password), observaremos que tiene configurado 2 dias.

- Si el usuario mondo lirondo intenta a volver a cambiar su password, aparecera un error:

passwd: Authentication token manipulation error
passwd: password unchanged

- Para poder hacer pruebas, se debería cambiar este valor a 0. (Una vez terminemos de configurar y hacer pruebas retornaremos su valor)

$ sudo chage -m 0 username42

- Puesto que queremos aplicar una política fuerte de contraseñas jugaremos con: "pam_cracklib.so" i "pam_pwquality.so"
- Antes de seguir, por si las moscas, hacemos un snapshot de la máquina virtual
- Para poder usarlas, primero tendremos que instalarlas:

$ sudo apt update
$ sudo apt upgrade
$ sudo apt install libpam-cracklib
$ sudo apt install libpam-pwquality

- Una vez finalizado el proceso de instalación realizaremos una copia del fichero de configuracion para las políticas de password

$ sudo cp /etc/pam.d/common-password /etc/pam.d/common-password.bak

- Abriremos el fichero y añadiremos al final del fichero:

$ sudo nano /etc/pam.d/common-password

password	requisite	pam_cracklib.so try_first_pass retry=3 type= minlen=8 dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 reject_username
# (NOTA: mirar man del pam_craklib)

- Guardaremos el fichero: (ctrl-x) Yes
- Realizamos pruebas cambiando el password del usuario actual (username42):

$ passwd

Changing password for username42.
Current password:
New password:
Retype new password:
You must choose a longer password.
New password:
Retype new password:
BAD PASSWORD: it is too simplistic/systematic
New password:
Retype new password:
passwd: password updated successfully

- Introducimos el password actual, después el nuevo y volvemos a repetir.
- En este caso:
	a) el primer intento no tenia la longitud requerida
	b) el segundo intento era muy sencillo (123456789)
	c) en el tercer intento se puso un password que cumplía con los requerimientos.

En fin … (si hay ganas deshacemos el entuerto con una live, sino pos empezamos de nuevo)
